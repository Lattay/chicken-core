TODO for chicken							-*- Outline -*-
================


* bugs

** csc: no backtrace if chicken fails

** compiler
*** pre-optimization 
**** changes call-sites and makes them invalid for later pre-optimization
*** check profiling (-profile vs. profile-declaration)
**** this doesn't always seem to work, in particular with library units
**** ##sys#finish-profile should always be invoked
     is it in `exit'?
*** when re-defining intrinsics, the compiler should warn and disable re-writes
    add declaration to keep re-writes enabled for core library files
*** -prologue, -epilogue, -prelude, -postlude should check for argument being directory 
    (reported by Eduardo Cavazos)

** expander
*** expansion of r5rs_pitfall 4.2 incorrect
    possibly due to a non-aliased implicit "begin" somewhere
*** dirty-macros.scm loops when using `defile'
    possibly due to unrenamed special forms
*** extended lambda-lists refer to `optional' and `let-optionals[*]'
    this will break, when these macros are renamed on import or not imported
    at all
**** a possible solution is to use internal forms, provided by the "scheme" module.
*** need way to force generating module-registration code for standalone executables.

** modules
*** mark import-source (module) on plist of imported symbols and use in re-import warning
    doesn't work that easily, try to find another solution
*** DSSSL lambda-lists need imports of `chicken' module ("optional", "let-optionals", ...)
**** should probably use internal aliases

** libraries
*** library/runtime: cyclic list checks for assq/assv/assoc/memq/memv/member
    and C_i_list_tail
*** finalizers on lexically ref'd data not working in interpreter
    reported by Jim Ursetto
    reverted original patch, see patches/finalizer-closures.diff


* tasks

** pending commits

commit 045f1db4ee22cdbecade4a17307ae61bba8bf31d
Author: Felix <bunny351@gmail.com>
Date:   Sun Nov 1 00:02:00 2009 +0100

    chicken-install should not use setup-mode when cross-compiling

commit dc0ba86aa9d4488a57ccc7e03c7dcc5b6ff41798
Author: unknown <felix@.(none)>
Date:   Thu Oct 22 11:46:23 2009 +0200

    disabled e-mail transmission in chicken-bug

commit ee844ebd18de4ebbd0ec6d2290e3c711633ccae5
Author: unknown <felix@.(none)>
Date:   Fri Oct 30 09:49:15 2009 +0100

    fixed bug in get-condition-property

commit bff0472a148dee1f600557423240b32a07b46eda
Author: unknown <felix@.(none)>
Date:   Fri Oct 30 12:43:17 2009 +0100

    removed remaining references and support code for breakpoints; removed uses of NOAPPLYHOOK in makefiles

commit bce0d16a76588f8918ace633313edd62ffe575e6
Author: unknown <felix@.(none)>
Date:   Mon Oct 19 14:21:51 2009 +0200

    possible fix for reexport bug; no timing output for benchmarks in test suite

commit 1402eea7aec2611dfe48542715b1492561072f41
Author: unknown <felix@.(none)>
Date:   Mon Oct 19 12:12:46 2009 +0200

    henrietta shows version in comment marker; removed unused ##sys#syntactic-environment?

commit 3a8da718bf4c6b71ced0fb60bee2bd84a2f2321d
Author: Felix <bunny351@gmail.com>
Date:   Wed Oct 14 14:59:13 2009 +0200

    Added optional argument to grep function in regex unit [suggested by Tony Sidaway]

commit 6e5eb38f11a2a8f9a82d1009563e371139a76438
Author: Felix <bunny351@gmail.com>
Date:   Sun Oct 11 00:45:40 2009 +0200

    removed apply-, unbound-value- and invalid procedure call hooks.
    These are just complicated hacks with very little value.

** private commits not in pending

commit 0ef80438adf6bc8f2b4efb0891ce9ee5f645f1c6
Author: unknown <felix@.(none)>
Date:   Thu Oct 29 09:32:00 2009 +0100

    installation-prefix is always valid

commit c3b3345ed4307fe32ef37151bc29d9c4bccf34a4
Author: unknown <felix@.(none)>
Date:   Tue Oct 27 11:17:23 2009 +0100

    CHICKEN_yield callback should use internal ##sys#thread-yield

commit f4f1ce51affa0295314a5d120627664bd432f0aa
Author: unknown <felix@.(none)>
Date:   Mon Oct 26 15:21:06 2009 +0100

    printer for hash-tables shows current size

commit 4d9e6048783133aebd4c4ecc03783aefe40f4103
Author: unknown <felix@.(none)>
Date:   Mon Oct 26 08:50:50 2009 +0100

    -debug S instead of -debug C

*** combine with the one below

commit f674d1310a9aa780bd1edc9316e092c062572dde
Author: Felix <bunny351@gmail.com>
Date:   Sun Oct 25 13:05:07 2009 +0100

    -debug C for compiler syntax

commit 6579494dffd3d84fe6ab0ce2b89bbf0fbc2807de
Author: unknown <felix@.(none)>
Date:   Thu Oct 22 11:47:04 2009 +0200

    toplevel-def.-expansion-hook

commit ab284ea5881e8a6698f1bfff8e3d0d3ce57ee425
Author: unknown <felix@.(none)>
Date:   Thu Oct 22 09:40:10 2009 +0200

    upgrade message in setup-api shows version (thanks to ckeen)

commit d611cdb4ff734bfaaadfadc57985eee6cf410dd1
Author: unknown <felix@.(none)>
Date:   Wed Oct 21 16:06:31 2009 +0200

    standard-extension has optional static compile flag

commit 94f9b927fa3d7b1a6083cb07a8d7c60aa387b4ae
commit c4b8bde930d383d5572975e6f5cce025d9fb759d
Author: unknown <felix@.(none)>
Date:   Tue Oct 20 13:23:55 2009 +0200

    install so, not scm, silly

commit 18b042d591d28ed57115ec783b6b51e66ce62a19
Author: unknown <felix@.(none)>
Date:   Tue Oct 20 13:20:10 2009 +0200

    standard-extension didn't install import library

commit c5fac3c98d7c187e0564d062c3f77623f3882741
Author: unknown <felix@.(none)>
Date:   Tue Oct 20 12:21:53 2009 +0200

    cleanups in some text-files

commit 89a110080526e0160f3240281d3bd98eb0aff0ba
Author: unknown <felix@.(none)>
Date:   Tue Oct 20 12:18:53 2009 +0200

    removed some obsolete scripts and files

***  This is to be split up (manual.css stays)

commit 81dcc1cfe055eb150c6643447c3ed0f12c118836
Author: unknown <felix@.(none)>
Date:   Tue Oct 20 11:51:45 2009 +0200

    process-execute on windows didn't handle case of missing arglist argument

commit c1154565abc041202110aae8e93a57cbe3fba3c2
Author: Felix <bunny351@gmail.com>
Date:   Sun Oct 11 11:37:44 2009 +0200

    removed trace operations from manual

commit c41657eedc99190a644df6581a8bf9944452a97a
Author: Felix <bunny351@gmail.com>
Date:   Sun Oct 11 11:37:06 2009 +0200

    remove tracing facilities from csi - this can be done better using the advice egg

** SHA-1 commit-ID in banner

** module issues
*** need a way to omit generating module registration without generating import lib
    for example when compiling static version, where implib already exists
*** code-duplication in compiler and evaluator for ##core#module
*** "scheme" module does not include some special forms ("define-syntax", etc.)
*** import-for-syntax imports value bindings into import-env
    should actually be a distinct meta-import-env.
    example: we need `(import-for-syntax chicken)' to have access to
    `receive' in a procedural syntax definition.
*** curried define performs expansion in empty se - problem?
    (as comment in expand.scm indicated (##sys#register-export))
*** check phase separation and module access
**** see "expander" above
*** consider adding support for unnamed modules

** compiler
*** (csc) generate object-files in /tmp (or TMPDIR)?

** setup/install
*** setup-download
**** use "HTTP_PROXY"/"http_proxy" env. var
**** handle redirects in http-fetch

** library units
*** read-mark list should be stored in read-table
*** Weak locatives can probably be used to implement weak hash-tables (at least for some data)

** syntax-error
*** if ##sys#current-module is set, add name to error message?
*** fluidly keep track of expanded forms (extend meaning of culprit) to pprint pruned expr on error

** build
*** need script to process import libraries for generating indices for doc.callcc.org
    then tell Toby Butzon about it
*** using "touch" with WINDOWS_SHELL won't work (need alternative) (mingw/non-msys build)
*** extend scripts/guess-platforms.sh for more platforms

** scrutiny
*** add support for keyword arguments and check even length and available keywords

** runtime
*** try to build with TLS


* features

** error-handling hook for argument-type errors that signal a non-number
   the numbers hook could modify this and provide a better error message if a non-core
   number type triggers such an error


* tests

** optional longer run (env. var)
*** syntax-rules-stress-test
*** fully compiled ec-tests
** 3-stage bootstrap with compiler-output comparison


* optimizations

** define these as static inline functions in chicken.h:
   C_i_not_pair_p_2
   C_i_fixnum_arithmetic_shift
   C_a_i_flonum_negate
   C_a_i_flonum_quotient
   C_a_i_flonum_times
   C_a_i_flonum_difference
   C_a_i_flonum_plus
   C_u_i_oddp
   C_u_i_negativep
   C_u_i_positivep
   C_u_i_zerop
   C_u_i_inexactp
   C_u_i_exactp
   C_i_flonum_max
   C_i_flonum_min
   C_i_fixnum_max
   C_i_fixnum_min
   C_i_finitep
   C_i_flonump
   C_i_integerp
   C_i_closurep
   C_i_portp
   C_i_vectorp
   C_i_locativep
   C_i_stringp
   C_i_pairp
   C_i_symbolp
   C_i_eqvp
   C_i_o_fixnum_plus
   C_i_o_fixnum_difference
   C_i_o_fixnum_and
   C_i_o_fixnum_ior
   C_i_o_fixnum_xor

** local mode could be enabled for all core libs
   also could reduce performance, as it does for regex

** global inline files for core units
*** This would remove necessity for many simple re-write rules in c-platform.scm

** delegates for extended llists
*** (define (foo ... #!XXX ...) ...)
    ~>
    (begin
      (declare (hide tmp))
      (define (tmp VAR ...) ...)
      (define (foo ... #!XXX ...) (tmp VAR ...))
      (define-compiler-syntax foo
        (syntax-rules ()
	  ((_ arg ...) (tmp <processed-arg> ...)))))
*** only used after definition
*** only if opt/key defaults don't refer to previous llist vars
*** disable if no compiler-syntax enabled

** self-recursion optimization
*** what MacScheme called "benchmark-mode" (assume self-calls are recursion)
*** needs declaration or option, >= -O2
*** can be implemented like in the extended-llists opt. above
*** this should actually already work in local mode (toplevel defs are known, after all)

** compiler-support for get-keyword ?
*** what when a function with keyword args gets inlined?
*** when inlining, consing arg-list with "list" may make get-keyword possibly foldable

** lambda-fusion / "fuse-and-dispatch" (suggested by Alex Shinn)
   convert groups of local lambdas referenced to only in operator-position into
   looping lambda + dispatch (static variable can be used), otherwise similar to
   a conditional

** handle optional args primitively 
   for example, set to distinguished val (checking argc) on C level, core
   primitive for checking this - should be quite simple, but llist processing
   (decompose-lambda-list) will be more expensive and cumbersome.

** The benchmarks are meaningless - find real ones.
*** Feeley's benchmarks (slatex, compiler)
*** Brad Lucier's fft

** speculative inlining

(define-compiler-syntax +          ; "mostly-fixnum-flonum" case
  (syntax-rules ()
    ((_ x y)
     (let ((t1 x)
	   (t2 y))
       (if (and (fixnum? t1) (fixnum? t2))
           ;; makes only sense if C_i_o_fixnum_plus is inlined at C level
	   (or (##core#inline "C_i_o_fixnum_plus" t1 t2)
	       (##core#inline_allocate ("C_a_i_plus" 4) t1 t2) )
	   (if (and (flonum? t1) (flonum? t2))
	       (##core#inline_allocate ("C_a_i_flonum_plus" 4) t1 t2)
	       (##core#inline_allocate ("C_a_i_plus" 4) t1 t2) ) ) ) ) ) )
