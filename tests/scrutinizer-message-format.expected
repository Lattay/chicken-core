;; numbers replaced with XXX by redact-gensyms.scm
;; prefixes: (tmp g scm: a b)

Warning: literal in operator position: (1 2)

Warning: literal in operator position: (1 2)

Warning: in toplevel procedure `r-proc-call-argument-count-mismatch':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#cons', expected 2 arguments but was given 1 argument

Warning: in toplevel procedure `r-proc-call-argument-type-mismatch':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#length', expected argument #1 of type `list' but was given an argument of type `symbol'

Warning: in toplevel procedure `r-proc-call-argument-value-count':
  (test-scrutinizer-message-format.scm:XXX) expected a single result in argument #1 of procedure call `(scheme#list (chicken.time#cpu-time))', but received 2 results

Warning: in toplevel procedure `r-proc-call-argument-value-count':
  (test-scrutinizer-message-format.scm:XXX) expected a single result in argument #1 of procedure call `(scheme#vector (scheme#values))', but received zero results

Warning: in toplevel procedure `r-proc-call-argument-value-count':
  expected a single result in `let' binding of `gXXX', but received zero results

Warning: in toplevel procedure `r-cond-branch-value-count-mismatch':
  branches in conditional expression differ in the number of results:

(if (the * 1) 1 (scheme#values 1 2))

Warning: in toplevel procedure `r-invalid-called-procedure-type':
  in procedure call to `1', expected a value of type `(procedure (*) *)' but was given a value of type `fixnum'

Note: in toplevel procedure `r-pred-call-always-true':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#list?', the predicate is called with an argument of type `null' and will always return true

Note: in toplevel procedure `r-pred-call-always-false':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#symbol?', the predicate is called with an argument of type `fixnum' and will always return false

Note: in toplevel procedure `r-cond-test-always-true':
  expected a value of type boolean in conditional, but was given a value of type `symbol' which is always true:

(if 'symbol 1 (##core#undefined))

Note: in toplevel procedure `r-cond-test-always-false':
  in conditional, test expression will always return false:

(if #f 1 (##core#undefined))

Warning: in toplevel procedure `r-type-mismatch-in-the':
  expression returns a result of type `fixnum' but is declared to return `symbol', which is not compatible

Warning: in toplevel procedure `r-zero-values-for-the':
  expression returns zero values but is declared to have a single result of type `symbol'

Warning: in toplevel procedure `r-too-many-values-for-the':
  expression returns 2 values but is declared to have a single result

Warning: in toplevel procedure `r-too-many-values-for-the':
  expression returns a result of type `fixnum' but is declared to return `symbol', which is not compatible

Warning: in toplevel procedure `r-toplevel-var-assignment-type-mismatch':
  assignment of value of type `fixnum' to toplevel variable `foo' does not match declared type `boolean'

Warning: in toplevel procedure `r-deprecated-identifier':
  use of deprecated `deprecated-foo'

Warning: in toplevel procedure `r-deprecated-identifier':
  use of deprecated `deprecated-foo2' - consider `foo'

Warning: at toplevel:
  assignment of value of type `fixnum' to toplevel variable `foo' does not match declared type `boolean'

Warning: in toplevel procedure `list-ref-negative-index':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#list-ref', index -1 is negative, which is never valid

Warning: in toplevel procedure `list-ref-out-of-range':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#list-ref', index 1 out of range for proper list of length 0

Warning: in toplevel procedure `vector-ref-out-of-range':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#vector-ref', index -1 out of range for vector of length 0

Warning: in toplevel procedure `zero-values-for-let':
  expected a single result in `let' binding of `a', but received zero results

Warning: in toplevel procedure `multiple-values-for-let':
  expected a single result in `let' binding of `a', but received 2 results

Warning: in toplevel procedure `zero-values-for-conditional':
  expected a single result in conditional, but received zero results

Warning: in toplevel procedure `multiple-values-for-conditional':
  expected a single result in conditional, but received 2 results

Note: in toplevel procedure `multiple-values-for-conditional':
  (test-scrutinizer-message-format.scm:XXX) expected a value of type boolean in conditional, but was given a value of type `fixnum' which is always true:

(if (scheme#values 1 2) 1 (##core#undefined))

Warning: in local procedure `r-proc-call-argument-count-mismatch',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#cons', expected 2 arguments but was given 1 argument

Warning: in local procedure `r-proc-call-argument-type-mismatch',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#length', expected argument #1 of type `list' but was given an argument of type `symbol'

Warning: in local procedure `r-proc-call-argument-value-count',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  (test-scrutinizer-message-format.scm:XXX) expected a single result in argument #1 of procedure call `(scheme#list (chicken.time#cpu-time))', but received 2 results

Warning: in local procedure `r-proc-call-argument-value-count',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  (test-scrutinizer-message-format.scm:XXX) expected a single result in argument #1 of procedure call `(scheme#vector (scheme#values))', but received zero results

Warning: in local procedure `r-proc-call-argument-value-count',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  expected a single result in `let' binding of `gXXX', but received zero results

Warning: in local procedure `r-cond-branch-value-count-mismatch',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  branches in conditional expression differ in the number of results:

(if (the * 1) 1 (chicken.time#cpu-time))

Warning: in local procedure `r-invalid-called-procedure-type',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  in procedure call to `1', expected a value of type `(procedure (*) *)' but was given a value of type `fixnum'

Note: in local procedure `r-pred-call-always-true',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#list?', the predicate is called with an argument of type `null' and will always return true

Note: in local procedure `r-pred-call-always-false',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#symbol?', the predicate is called with an argument of type `fixnum' and will always return false

Note: in local procedure `r-cond-test-always-true',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  (test-scrutinizer-message-format.scm:XXX) expected a value of type boolean in conditional, but was given a value of type `fixnum' which is always true:

(if (scheme#length '()) 1 (##core#undefined))

Note: in local procedure `r-cond-test-always-false',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  in conditional, test expression will always return false:

(if #f 1 (##core#undefined))

Warning: in local procedure `r-type-mismatch-in-the',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  expression returns a result of type `fixnum' but is declared to return `symbol', which is not compatible

Warning: in local procedure `r-zero-values-for-the',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  expression returns zero values but is declared to have a single result of type `symbol'

Warning: in local procedure `r-too-many-values-for-the',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  expression returns 2 values but is declared to have a single result

Warning: in local procedure `r-too-many-values-for-the',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  expression returns a result of type `fixnum' but is declared to return `symbol', which is not compatible

Warning: in local procedure `r-toplevel-var-assignment-type-mismatch',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  assignment of value of type `fixnum' to toplevel variable `m#foo2' does not match declared type `boolean'

Warning: in local procedure `r-deprecated-identifier',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  use of deprecated `m#deprecated-foo'

Warning: in local procedure `r-deprecated-identifier',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  use of deprecated `m#deprecated-foo2' - consider `foo'

Warning: in local procedure `list-ref-negative-index',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#list-ref', index -1 is negative, which is never valid

Warning: in local procedure `list-ref-out-of-range',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#list-ref', index 1 out of range for proper list of length 0

Warning: in local procedure `vector-ref-out-of-range',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  (test-scrutinizer-message-format.scm:XXX) in procedure call to `scheme#vector-ref', index -1 out of range for vector of length 0

Warning: in local procedure `zero-values-for-let',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  expected a single result in `let' binding of `a', but received zero results

Warning: in local procedure `multiple-values-for-let',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  expected a single result in `let' binding of `a', but received 2 results

Warning: in local procedure `zero-values-for-conditional',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  expected a single result in conditional, but received zero results

Warning: in local procedure `multiple-values-for-conditional',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  expected a single result in conditional, but received 2 results

Note: in local procedure `multiple-values-for-conditional',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  (test-scrutinizer-message-format.scm:XXX) expected a value of type boolean in conditional, but was given a value of type `fixnum' which is always true:

(if (scheme#values 1 2) 1 (##core#undefined))

Error: in local procedure `fail-compiler-typecase',
  in local procedure `local-bar',
  in toplevel procedure `m#toplevel-foo':
  (test-scrutinizer-message-format.scm:XXX) no clause applies in `compiler-typecase' for expression of type `fixnum':
    symbol
    list
